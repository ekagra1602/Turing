#!/bin/bash

echo "======================================="
echo "AgentFlow Voice Integration Launcher"
echo "======================================="
echo ""

# Check if we're in the right directory
if [ ! -f "agent.py" ]; then
    echo "‚ùå Please run this script from backend/voice/ directory"
    echo "   cd backend/voice && ./run_voice_integration.sh"
    exit 1
fi

# Check if virtual environment exists
if [ ! -d "venv" ]; then
    echo "üì¶ Creating virtual environment..."
    python3 -m venv venv
fi

# Activate virtual environment
echo "üîß Activating virtual environment..."
source venv/bin/activate

# Install dependencies if needed
if [ ! -f "venv/pyvenv.cfg" ] || [ ! -d "venv/lib" ]; then
    echo "üì¶ Installing dependencies..."
    pip install -r requirements.txt
fi

# Test the integration
echo ""
echo "üß™ Testing voice integration..."
python test_voice_integration.py

if [ $? -eq 0 ]; then
    echo ""
    echo "‚úÖ Integration test passed!"
    echo ""
    echo "üöÄ Starting voice agent with workflow integration..."
    echo ""
    echo "The voice agent will now:"
    echo "  ‚Ä¢ Listen for voice commands"
    echo "  ‚Ä¢ Detect workflow execution requests"
    echo "  ‚Ä¢ Execute AgentFlow workflows automatically"
    echo "  ‚Ä¢ Provide voice feedback on execution status"
    echo ""
    echo "Start the frontend in another terminal:"
    echo "  cd frontend && npm run dev"
    echo ""
    echo "Then open http://localhost:3000 and try:"
    echo "  ‚Ä¢ 'Send an email to John'"
    echo "  ‚Ä¢ 'Open my Canvas class'"
    echo "  ‚Ä¢ 'Remember what I'm going to do now'"
    echo ""
    
    # Start the voice agent
    python agent.py dev
else
    echo ""
    echo "‚ùå Integration test failed!"
    echo "Please check the error messages above and fix any issues."
    echo ""
    echo "Common issues:"
    echo "  ‚Ä¢ Missing API keys in .env.local"
    echo "  ‚Ä¢ AgentFlow system not properly set up"
    echo "  ‚Ä¢ Missing dependencies"
    echo ""
    exit 1
fi
